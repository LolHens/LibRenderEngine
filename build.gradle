file('build.properties').withReader {
    def prop = new Properties()
    prop.load it
    project.ext.config = new ConfigSlurper().parse prop
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

version = config.version
group = config.group

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile([group: 'org.scala-lang', name: 'scala-library', version: config.version_scala],
            [group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: config.version_akka],
            [group: 'ar.com.hjg', name: 'pngj', version: config.version_pngj],
            [group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp])
    runtime([group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp, classifier: 'natives-linux-i586'],
            [group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp, classifier: 'natives-linux-amd64'],
            [group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp, classifier: 'natives-windows-i586'],
            [group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp, classifier: 'natives-windows-amd64'],
            [group: 'org.jogamp.jogl', name: 'jogl-all', version: config.version_jogamp, classifier: 'natives-macosx-universal'],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp, classifier: 'natives-linux-i586'],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp, classifier: 'natives-linux-amd64'],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp, classifier: 'natives-windows-i586'],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp, classifier: 'natives-windows-amd64'],
            [group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: config.version_jogamp, classifier: 'natives-macosx-universal'])
    testCompile([group: 'junit', name: 'junit', version: config.version_junit])
}

jar {
    manifest {
        if (!config.mainClass.isEmpty()) attributes "Main-Class": config.mainClass
    }
}

task testJar(type: Jar, dependsOn: javadoc) {
    from sourceSets.main.output
    from sourceSets.test.output
    classifier = 'test'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

build.dependsOn testJar, sourceJar, javadocJar